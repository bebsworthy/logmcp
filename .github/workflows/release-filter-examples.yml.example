# Example configurations for path filtering in GitHub Actions
# This file is not used by the workflow - it's just for reference

# Option 1: Using dorny/paths-filter (what we implemented)
# Pros: Simple, declarative, well-maintained
# Cons: Limited to path patterns

# Option 2: Using tj-actions/changed-files
# More powerful, supports complex queries
name: Release Alternative
on:
  push:
    branches: [main]

jobs:
  check-changes:
    runs-on: ubuntu-latest
    outputs:
      any_changed: ${{ steps.changed-files.outputs.any_changed }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v44
        with:
          files: |
            **/*.go
            go.mod
            go.sum
            cmd/**
            internal/**

      - name: List all changed files
        run: |
          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            echo "$file was changed"
          done

# Option 3: Using git diff directly
# Most flexible but requires more scripting
  check-with-git:
    runs-on: ubuntu-latest
    outputs:
      should_release: ${{ steps.check.outputs.should_release }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Check if source files changed
        id: check
        run: |
          # Get list of changed files
          CHANGED_FILES=$(git diff --name-only HEAD^ HEAD)
          
          # Check if any Go files changed
          if echo "$CHANGED_FILES" | grep -E '\.(go|mod|sum)$|^cmd/|^internal/'; then
            echo "should_release=true" >> $GITHUB_OUTPUT
          else
            echo "should_release=false" >> $GITHUB_OUTPUT
          fi

# Option 4: Using paths-ignore in the workflow trigger
# Simplest but less flexible
name: Release with Path Ignore
on:
  push:
    branches: [main]
    paths-ignore:
      - '**.md'
      - 'LICENSE'
      - '.gitignore'
      - 'install.sh'
      - 'documentation/**'

# Option 5: Custom action with more complex logic
# For example, skip release if only certain combinations change
  complex-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Complex change detection
        run: |
          # Could check commit messages for [skip-release]
          if git log -1 --pretty=%B | grep -q '\[skip-release\]'; then
            echo "Skip release due to commit message"
            exit 0
          fi
          
          # Could check if only test files changed
          if git diff --name-only HEAD^ HEAD | grep -v '_test\.go$' | grep -q '\.go$'; then
            echo "Non-test Go files changed, proceed with release"
          fi